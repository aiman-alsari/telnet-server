<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="4" time="0.517" errors="0" skipped="0" tests="19" name="nz.co.ahc.command.FileManagerTest">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="D:\Java\jre\bin"/>
    <property name="java.vm.version" value="24.0-b56"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="GB"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="Service Pack 1"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="D:\Share\telnet-server"/>
    <property name="java.runtime.version" value="1.7.0_40-b43"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="D:\Java\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\aimana\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 7"/>
    <property name="classworlds.conf" value="D:\apache-maven-3.0.5\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="D:\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\HP SimplePass 2011\;C:\Program Files (x86)\HP SimplePass 2011\x64;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Calibre2\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\apache-maven-3.0.5\bin;D:\Java;."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="51.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="6.1"/>
    <property name="user.home" value="C:\Users\aimana"/>
    <property name="user.timezone" value="Europe/London"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.7"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="user.name" value="aimana"/>
    <property name="java.class.path" value="D:\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar"/>
    <property name="java.vm.specification.version" value="1.7"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="D:\Java\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.7.0_40"/>
    <property name="java.ext.dirs" value="D:\Java\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="D:\Java\jre\lib\resources.jar;D:\Java\jre\lib\rt.jar;D:\Java\jre\lib\sunrsasign.jar;D:\Java\jre\lib\jsse.jar;D:\Java\jre\lib\jce.jar;D:\Java\jre\lib\charsets.jar;D:\Java\jre\lib\jfr.jar;D:\Java\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="D:\apache-maven-3.0.5"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase time="0.27" classname="nz.co.ahc.command.FileManagerTest" name="testChangeDirectoryCommandNoArguments"/>
  <testcase time="0.003" classname="nz.co.ahc.command.FileManagerTest" name="testChangeDirectoryCommandTwoArguments"/>
  <testcase time="0.005" classname="nz.co.ahc.command.FileManagerTest" name="testChangeDirectoryUpADirectory"/>
  <testcase time="0.002" classname="nz.co.ahc.command.FileManagerTest" name="testEmptyCommand"/>
  <testcase time="0.002" classname="nz.co.ahc.command.FileManagerTest" name="testMakeDirCommandNoArguments"/>
  <testcase time="0.003" classname="nz.co.ahc.command.FileManagerTest" name="testMakeDirCommand"/>
  <testcase time="0.003" classname="nz.co.ahc.command.FileManagerTest" name="testListCommand"/>
  <testcase time="0.004" classname="nz.co.ahc.command.FileManagerTest" name="testChangeDirectoryCommand"/>
  <testcase time="0.018" classname="nz.co.ahc.command.FileManagerTest" name="testMakeAbsoluteDirectory">
    <failure message="
Argument(s) are different! Wanted:
fileManagerPrintStream.println(
    &quot;&lt;D&gt; cheese&quot;
);
-&gt; at nz.co.ahc.command.FileManagerTest.testMakeAbsoluteDirectory(FileManagerTest.java:131)
Actual invocation has different arguments:
fileManagerPrintStream.println(
    &quot;C:\Users\aimana\AppData\Local\Temp\FileManagerTest&quot;
);
-&gt; at nz.co.ahc.command.PrintWorkingDirectoryCommand.handle(PrintWorkingDirectoryCommand.java:8)
" type="Argument(s) are different! Wanted">Argument(s) are different! Wanted:
fileManagerPrintStream.println(
    &quot;&lt;D&gt; cheese&quot;
);
-&gt; at nz.co.ahc.command.FileManagerTest.testMakeAbsoluteDirectory(FileManagerTest.java:131)
Actual invocation has different arguments:
fileManagerPrintStream.println(
    &quot;C:\Users\aimana\AppData\Local\Temp\FileManagerTest&quot;
);
-&gt; at nz.co.ahc.command.PrintWorkingDirectoryCommand.handle(PrintWorkingDirectoryCommand.java:8)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at nz.co.ahc.command.FileManagerTest.testMakeAbsoluteDirectory(FileManagerTest.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
</failure>
  </testcase>
  <testcase time="0.008" classname="nz.co.ahc.command.FileManagerTest" name="testMakeTwoDirectories">
    <failure message="
Argument(s) are different! Wanted:
fileManagerPrintStream.println(&quot;&lt;D&gt; cheese&quot;);
-&gt; at nz.co.ahc.command.FileManagerTest.testMakeTwoDirectories(FileManagerTest.java:141)
Actual invocation has different arguments:
fileManagerPrintStream.println(&quot;&lt;D&gt; brie&quot;);
-&gt; at nz.co.ahc.command.ListCommand.handle(ListCommand.java:37)
" type="Argument(s) are different! Wanted">Argument(s) are different! Wanted:
fileManagerPrintStream.println(&quot;&lt;D&gt; cheese&quot;);
-&gt; at nz.co.ahc.command.FileManagerTest.testMakeTwoDirectories(FileManagerTest.java:141)
Actual invocation has different arguments:
fileManagerPrintStream.println(&quot;&lt;D&gt; brie&quot;);
-&gt; at nz.co.ahc.command.ListCommand.handle(ListCommand.java:37)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at nz.co.ahc.command.FileManagerTest.testMakeTwoDirectories(FileManagerTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
</failure>
  </testcase>
  <testcase time="0.007" classname="nz.co.ahc.command.FileManagerTest" name="testChangeDirectoryAbsolute">
    <failure message="
Argument(s) are different! Wanted:
fileManagerPrintStream.println(
    &quot;C:\Users\aimana\AppData\Local\Temp\FileManagerTest\cheese&quot;
);
-&gt; at nz.co.ahc.command.FileManagerTest.testChangeDirectoryAbsolute(FileManagerTest.java:152)
Actual invocation has different arguments:
fileManagerPrintStream.println(
    &quot;Directory does not exist: C:\Users\aimana\AppData\Local\Temp\FileManagerTest\cheese&quot;
);
-&gt; at nz.co.ahc.command.ChangeDirectoryCommand.handle(ChangeDirectoryCommand.java:27)
" type="Argument(s) are different! Wanted">Argument(s) are different! Wanted:
fileManagerPrintStream.println(
    &quot;C:\Users\aimana\AppData\Local\Temp\FileManagerTest\cheese&quot;
);
-&gt; at nz.co.ahc.command.FileManagerTest.testChangeDirectoryAbsolute(FileManagerTest.java:152)
Actual invocation has different arguments:
fileManagerPrintStream.println(
    &quot;Directory does not exist: C:\Users\aimana\AppData\Local\Temp\FileManagerTest\cheese&quot;
);
-&gt; at nz.co.ahc.command.ChangeDirectoryCommand.handle(ChangeDirectoryCommand.java:27)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at nz.co.ahc.command.FileManagerTest.testChangeDirectoryAbsolute(FileManagerTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
</failure>
  </testcase>
  <testcase time="0.005" classname="nz.co.ahc.command.FileManagerTest" name="testListRelative"/>
  <testcase time="0.011" classname="nz.co.ahc.command.FileManagerTest" name="testListAbsolute">
    <failure message="
Argument(s) are different! Wanted:
fileManagerPrintStream.println(
    &quot;&lt;D&gt; brie&quot;
);
-&gt; at nz.co.ahc.command.FileManagerTest.testListAbsolute(FileManagerTest.java:170)
Actual invocation has different arguments:
fileManagerPrintStream.println(
    &quot;Directory does not exist: C:\Users\aimana\AppData\Local\Temp\FileManagerTest\cheese&quot;
);
-&gt; at nz.co.ahc.command.ListCommand.handle(ListCommand.java:25)
" type="Argument(s) are different! Wanted">Argument(s) are different! Wanted:
fileManagerPrintStream.println(
    &quot;&lt;D&gt; brie&quot;
);
-&gt; at nz.co.ahc.command.FileManagerTest.testListAbsolute(FileManagerTest.java:170)
Actual invocation has different arguments:
fileManagerPrintStream.println(
    &quot;Directory does not exist: C:\Users\aimana\AppData\Local\Temp\FileManagerTest\cheese&quot;
);
-&gt; at nz.co.ahc.command.ListCommand.handle(ListCommand.java:25)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at nz.co.ahc.command.FileManagerTest.testListAbsolute(FileManagerTest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
</failure>
  </testcase>
  <testcase time="0.003" classname="nz.co.ahc.command.FileManagerTest" name="testListIncorrectName"/>
  <testcase time="0.008" classname="nz.co.ahc.command.FileManagerTest" name="testListFilesAndDirectories"/>
  <testcase time="0.007" classname="nz.co.ahc.command.FileManagerTest" name="testCanNotListFile"/>
  <testcase time="0.003" classname="nz.co.ahc.command.FileManagerTest" name="testUnkownCommand"/>
  <testcase time="0.003" classname="nz.co.ahc.command.FileManagerTest" name="testPwd"/>
  <testcase time="0.077" classname="nz.co.ahc.command.FileManagerTest" name="testChangeDirectoryOnlyLetsYouChangeToDirectories"/>
</testsuite>